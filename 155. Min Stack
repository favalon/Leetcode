public class MinStack {
    long min;
    Stack<Long> stack;
    /** initialize your data structure here. */
    public MinStack() {
        stack=new Stack<>();
    }
    
    public void push(int x) {
        if(stack.isEmpty()){
            stack.push(0L);
            min=x;
        }else{
            stack.push(x-min);
            if(x<min) min =x;
        }
    }
    
    public void pop() {
        if (stack.isEmpty()) return;
        
        long pop=stack.pop();
        
        if (pop<0)  min=min-pop;//If negative, increase the min value
        
    }
    
    public int top() {
        long top = stack.peek();
        if(top>0){
            return (int)(top+min);
        }else{
            return (int)(min);
            //当input是一个比min小的数是，min会被更新，x-min永远是一个比0小的数，传回min。
            //让input是一个比min大的数时，x-min永远是一个比0大的数，传回top+min。
            //天才。。。
        }
    }
    
    public int getMin() {
        return (int)min;
    }
}
