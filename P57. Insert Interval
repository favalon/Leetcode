public class Solution {
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        List<Interval> res = new LinkedList<Interval>();
        int i =0;
        int n = intervals.size();
        int nStart = newInterval.start;
        int nEnd = newInterval.end;
        while(i<n&&intervals.get(i).end<newInterval.start){
            res.add(intervals.get(i));
            i++;
        }
        if(i==n){
            res.add(newInterval);
            return res;
        }
        nStart=Math.min(intervals.get(i).start,newInterval.start);
        while(i<n&&intervals.get(i).start<=newInterval.end){
            nEnd=Math.max(intervals.get(i).end,newInterval.end);
            i++;
        }
        res.add(new Interval(nStart,nEnd));
        while(i<n){
            res.add(intervals.get(i++));
        }
        return res;
        
    }
}
