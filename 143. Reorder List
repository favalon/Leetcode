Do this problem in 3 steps:
1 find the middle point of the link.
2 inverse the lind start at right of the middle.(let's say at point linkNode m)
3 Start reorder 1-m-2-m+1-3-m+2...;

public class Solution {
    public void reorderList(ListNode head) {
        if(head==null||head.next==null) return;
        //Step 1, find the middle point 
        ListNode p1=head,p2=head;
        
        while(p2.next!=null&&p2.next.next!=null){
            p1=p1.next;
            p2=p2.next.next;
            
        }
        //Step2, reverse the Link list from middle listnode.  1->2->3->4->5->6 to 1->2->3->6->5->4
        ListNode preMiddle = p1;
        ListNode preCurrent=p1.next;
        while(preCurrent.next!=null){
            ListNode current = preCurrent.next;
            preCurrent.next=current.next;
            current.next=preMiddle.next;
            preMiddle.next=current;
        }
        
        //Step3, reorder the linklist 1->2->3->6->5->4 to 1->6->2->5->3->4
        p1=head;
        p2=preMiddle.next;
        while(p1!=preMiddle){
            preMiddle.next=p2.next;
            p2.next=p1.next;
            p1.next=p2;
            p1=p2.next;
            p2=preMiddle.next;
        }
        
        
        
    }
}
