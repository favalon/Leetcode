public class Solution {
    public int longestConsecutive(int[] nums) {
        int res = 0;
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        Set<Integer> visited = new HashSet<>();//HashSet contains no duplicate, this will decrease the operation time dramaticly
        for(int n : nums){
            if(visited.contains(n)){
                continue;
            }
            visited.add(n);
            if(!map.containsKey(n)){
                int left = (map.containsKey(n-1))?map.get(n-1):0;
                int right = (map.containsKey(n+1))?map.get(n+1):0;
                
                int sum = left+right+1;
                map.put(n,sum);
                
                res=Math.max(res,sum);
                
                map.put(n-left,sum);
                map.put(n+right,sum);
            }
            
        }
        return res;
    }
}
