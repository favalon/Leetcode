public class Solution {
    public int minCut(String s) {
        if(s==null||s.length()==0) return 0;
        
        int len = s.length();
        
        boolean[][] palindrome = new boolean[len][len];
        
        for(int i =0;i<len;i++){
            Arrays.fill(palindrome[i],false);
        }
        int[] result = new int[len];
        
        for(int start = len-1;start>= 0 ;start--){
            result[start]=len-start-1;
            for(int end = start;end<len;end++){
                if(s.charAt(start)==s.charAt(end)){
                    if(end-start<2) palindrome[start][end]=true;
                    else palindrome[start][end]=palindrome[start+1][end-1];
                }
                
                if(palindrome[start][end])
                    if(end==len-1)
                        result[start]=0;
                    else
                        result[start]=Math.min(result[start],result[end+1]+1);
            }
        }
        return result[0];
    }
}
